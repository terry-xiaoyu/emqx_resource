title: "the log tracer"
description: "the log tracer is a log handler for tracing a topic or clientid"

layout: [condition, level, enable_cache, cache_logs_in, cache_log_dir, bulk]

## Setup the groups if you want show the fields on different tabs.
## The following example split the field into two group, with tab name
## "general" and "advanced", respectively:
##
## layout: {
##   general: [condition, level]
##   advanced: [enable_cache, cache_logs_in, cache_log_dir, bulk]
## }

fields: {
  condition: {
    type: object
    default: {"clientid": "abc", "topic": "t/#"}
    format: table ## table | jsonstr
    title: "The key and value pairs of the logger metadata"
    description: """When a log message contains a metadata key and also the value matches the value.
If multiple conditions are provided, they will be combined as "or"."""
  },
  level: {
    type: enum
    enum: [debug, info, notice, warning, error, critical, alert, emergency]
    default: debug
    title: "The log severity level"
    description: """Only the messages with severity level higher than or equal to this level will be logged."""
  },
  enable_cache: {
    type: boolean
    default: true
    title: "Enabled log message caching"
    description: """The field cache_logs_in is visible only when enable_cache is true.
Note that this field is not necessary but I put it here only for demo."""
  },
  cache_logs_in: {
    type: enum
    items: [memory, file]
    required: true
    default: memory
    visible: ${rules.if_cached_enabled}
    title: "Cache the log messages in memory or files"
    description: """If set to file, change the cache_log_dir for the directory of log files"""
  },
  cache_log_dir: {
    ## long_string
    type: string
    min: 1
    max: 256
    required: false
    default: "/tmp"
    ## builtin_pattern: file_path
    pattern: "^(.+)\/([^\/]+)$"
    visible: ${rules.if_cache_to_file}
    title: "The dir where the log messages should go"
    description: """The log messages will be cached to a file in this dir, and you can the unread messages by calling the `next_batch` API"""
  },
  bulk: {
    type: size
    required: false
    default: 1KB
    min: 256B
    max: 10KB
    title: "The max size of one bulk"
    description: """One bulk is how much log messages will return
        when calling the `next_batch` API"""
  },
}

## Define rules to determine if a field visible.
##  rules: {RuleName: Rule}
##
## Cond: {key: Key, value: Value}
## Rule: Cond | {and: [Cond | Rule]} | {or: [Cond | Rule]}
##
## Cond Example: {key: 'use_ssl', value: "true"}
## Rule Example:
## { and: [
##     Cond1,
##     {or: [Cond2, Cond3]}
##   ]
## }

rules: {
  if_cached_enabled: {key: "enable_cache", value: "true"}
  if_cache_to_file: {
    and: [
      ${rules.if_cached_enabled},
      {key: "cache_logs_in", value: "file"}
    ]
  }
}